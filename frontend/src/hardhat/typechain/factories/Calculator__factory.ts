/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Calculator } from "../Calculator";

export class Calculator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Calculator> {
    return super.deploy(overrides || {}) as Promise<Calculator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Calculator {
    return super.attach(address) as Calculator;
  }
  connect(signer: Signer): Calculator__factory {
    return super.connect(signer) as Calculator__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Calculator {
    return new Contract(address, _abi, signerOrProvider) as Calculator;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "div",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "mul",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "pow",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "sub",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610994806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063435091381461005c5780636a6742dc1461008c578063a5f3c23b146100bc578063adefc37b146100ec578063bbe93d911461011c575b600080fd5b610076600480360381019061007191906106da565b61014c565b6040516100839190610761565b60405180910390f35b6100a660048036038101906100a19190610716565b610169565b6040516100b39190610761565b60405180910390f35b6100d660048036038101906100d191906106da565b610186565b6040516100e39190610761565b60405180910390f35b610106600480360381019061010191906106da565b61019c565b6040516101139190610761565b60405180910390f35b610136600480360381019061013191906106da565b6101b2565b6040516101439190610761565b60405180910390f35b600061016182846101cf90919063ffffffff16565b905092915050565b600061017e82846102d790919063ffffffff16565b905092915050565b60008183610194919061077c565b905092915050565b600081836101aa9190610810565b905092915050565b60006101c782846103a890919063ffffffff16565b905092915050565b60007f800000000000000000000000000000000000000000000000000000000000000083136101fd57600080fd5b7f8000000000000000000000000000000000000000000000000000000000000000821361022957600080fd5b6000806000851261023a578461023f565b846000035b91506000841261024f5783610254565b836000035b9050600061026b83670de0b6b3a7640000846104a1565b90507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81111561029a57600080fd5b6000806001600003881391506001600003871390506001818318146102bf57826102ca565b826102c9906108b8565b5b9550505050505092915050565b6000806102e38461057c565b905060008060018516116102ff57670de0b6b3a7640000610301565b815b9050600184901c93505b60008411156103455761031e82836105c4565b915060006001851611156103395761033681836105c4565b90505b600184901c935061030b565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81111561037257600080fd5b6000808612801561038557506001808616145b905080610392578161039d565b8161039c906108b8565b5b935050505092915050565b60007f800000000000000000000000000000000000000000000000000000000000000083136103d657600080fd5b7f8000000000000000000000000000000000000000000000000000000000000000821361040257600080fd5b600080600085126104135784610418565b846000035b915060008412610428578361042d565b836000035b9050600061043b83836105c4565b90507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81111561046a57600080fd5b60008060016000038813915060016000038713905060018183181461048f5782610494565b826000035b9550505050505092915050565b6000806000801985870985870292508281108382030391505060008114156104dc57600084116104d057600080fd5b83820492505050610575565b8084116104e857600080fd5b60008486880990508281118203915080830392506000600186190186169050808604955080840493506001818260000304019050808302841793506000600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b60007f800000000000000000000000000000000000000000000000000000000000000082136105aa57600080fd5b600082126105b857816105bd565b816000035b9050919050565b60008060008019848609848602925082811083820303915050600080670de0b6b3a764000086880991506706f05b59d3b1ffff8211905060008314156106505780670de0b6b3a76400008581610643577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b04019450505050506106aa565b82670de0b6b3a76400001161066457600080fd5b807faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac1066960016204000080600003040186851186030262040000858803041702019450505050505b92915050565b6000813590506106bf81610930565b92915050565b6000813590506106d481610947565b92915050565b600080604083850312156106ed57600080fd5b60006106fb858286016106b0565b925050602061070c858286016106b0565b9150509250929050565b6000806040838503121561072957600080fd5b6000610737858286016106b0565b9250506020610748858286016106c5565b9150509250929050565b61075b816108a4565b82525050565b60006020820190506107766000830184610752565b92915050565b6000610787826108a4565b9150610792836108a4565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313600083121516156107cd576107cc610901565b5b817f800000000000000000000000000000000000000000000000000000000000000003831260008312161561080557610804610901565b5b828201905092915050565b600061081b826108a4565b9150610826836108a4565b9250827f80000000000000000000000000000000000000000000000000000000000000000182126000841215161561086157610860610901565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01821360008412161561089957610898610901565b5b828203905092915050565b6000819050919050565b6000819050919050565b60006108c3826108a4565b91507f80000000000000000000000000000000000000000000000000000000000000008214156108f6576108f5610901565b5b816000039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610939816108a4565b811461094457600080fd5b50565b610950816108ae565b811461095b57600080fd5b5056fea2646970667358221220a66200c1fb3ba81f4bff869dcd86becfeb5f29eab31c9beef5441b4360e231ee64736f6c63430008030033";
